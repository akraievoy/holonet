<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2011 Anton Kraievoy akraievoy@gmail.com
  This file is part of Holonet.

  Holonet is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  Holonet is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with Holonet. If not, see <http://www.gnu.org/licenses/>.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:hn="https://github.com/akraievoy/holonet/runner/1.3.2"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           https://github.com/akraievoy/holonet/runner/1.3.2
           https://github.com/akraievoy/holonet/raw/master/ext/holonet.runner-1.3.2.xsd"
       default-init-method="start"
       default-destroy-method="stop">
  <hn:Experiment
      id="overlayGO-3-genetics" depends=""
      description="Overlay GO [stage3] Overlay Genetics">
    <hn:Config name="default" description="Default (101 generations / 91 specimens)">
      <hn:Param name="ovlGenOpt.generation" value="0-100" chainedStrategy="use_last" />
      <hn:Param name="ovlGenOpt.specimenIndex" value="0-90" chainedStrategy="use_first" strategy="use_first" />
      <hn:Param name="ovlGenOpt.missLimitRatio" value="200"/>
      <hn:Param name="geneticState.maxCrossover" value="0.25"/>
      <hn:Param name="geneticState.maxElemFitPow" value="3"/>
      <hn:Param name="geneticState.maxMutation" value="0.05"/>
      <hn:Param name="geneticStrategy.theta" value="1.75"/>
      <hn:Param name="geneticStrategy.steps" value="1"/>
      <hn:Param name="geneticStrategy.startLambda" value="0.6"/>
      <hn:Param name="geneticStrategy.lambda" value="0.65"/>
      <hn:Param name="geneticStrategy.lambdaTargetGeneration" value="50"/>
    </hn:Config>
    <hn:Config name="lambda65" description="Lambda: 0.65">
      <hn:Param name="geneticStrategy.startLambda" value="0.65"/>
      <hn:Param name="geneticStrategy.lambda" value="0.65"/>
      <hn:Param name="geneticStrategy.lambdaTargetGeneration" value="1"/>
    </hn:Config>
    <hn:Config name="lambda6570" description="Lambda: 0.65 --&gt; 0.70">
      <hn:Param name="geneticStrategy.startLambda" value="0.65"/>
      <hn:Param name="geneticStrategy.lambda" value="0.70"/>
      <hn:Param name="geneticStrategy.lambdaTargetGeneration" value="50"/>
    </hn:Config>
    <hn:Config name="lambda6575" description="Lambda: 0.65 --&gt; 0.75">
      <hn:Param name="geneticStrategy.startLambda" value="0.65"/>
      <hn:Param name="geneticStrategy.lambda" value="0.75"/>
      <hn:Param name="geneticStrategy.lambdaTargetGeneration" value="50"/>
    </hn:Config>
    <hn:Config name="lambda70" description="Lambda: 0.70">
      <hn:Param name="geneticStrategy.startLambda" value="0.70"/>
      <hn:Param name="geneticStrategy.lambda" value="0.70"/>
      <hn:Param name="geneticStrategy.lambdaTargetGeneration" value="1"/>
    </hn:Config>
    <hn:Config name="lambda70" description="Lambda: 0.70 --&gt; 0.75">
      <hn:Param name="geneticStrategy.startLambda" value="0.70"/>
      <hn:Param name="geneticStrategy.lambda" value="0.75"/>
      <hn:Param name="geneticStrategy.lambdaTargetGeneration" value="50"/>
    </hn:Config>
    <hn:Config name="lambda75" description="Lambda: 0.75">
      <hn:Param name="geneticStrategy.startLambda" value="0.75"/>
      <hn:Param name="geneticStrategy.lambda" value="0.75"/>
      <hn:Param name="geneticStrategy.lambdaTargetGeneration" value="1"/>
    </hn:Config>
    <hn:Config name="lambda7580" description="Lambda: 0.75 --&gt; 0.80">
      <hn:Param name="geneticStrategy.startLambda" value="0.75"/>
      <hn:Param name="geneticStrategy.lambda" value="0.80"/>
      <hn:Param name="geneticStrategy.lambdaTargetGeneration" value="50"/>
    </hn:Config>
    <hn:Config name="lambda7585" description="Lambda: 0.75 --&gt; 0.85">
      <hn:Param name="geneticStrategy.startLambda" value="0.75"/>
      <hn:Param name="geneticStrategy.lambda" value="0.85"/>
      <hn:Param name="geneticStrategy.lambdaTargetGeneration" value="50"/>
    </hn:Config>
    <hn:Config name="thetaProf" description="Varying Density (Theta)">
      <hn:Param name="geneticStrategy.theta" value="1;1.25;1.5;1.75"/>
    </hn:Config>
    <hn:Config name="stepsProf" description="Varying Steps">
      <hn:Param name="geneticStrategy.steps" value="1;3;5"/>
    </hn:Config>
  </hn:Experiment>

  <bean id="main_duration_text" class="org.akraievoy.base.runner.api.RefString">
    <property name="path" value="main_duration_text"/>
  </bean>
  <bean id="main_duration_millis" class="org.akraievoy.base.runner.api.RefLong">
    <property name="path" value="main_duration_millis"/>
  </bean>

  <bean class="org.akraievoy.cnet.net.ref.RefEdgeData" id="ref_overlay_edata_distance">
    <property name="path" value="overlay.distance"/>
  </bean>
  <bean class="org.akraievoy.cnet.net.ref.RefEdgeData" id="ref_overlay_edata_requests">
    <property name="path" value="overlay.requests"/>
  </bean>

  <bean class="org.akraievoy.cnet.gen.vo.EntropySourceRandom" id="entropySourceGenetics">
    <!-- DYNAMIC -->
    <property name="seed" value="11311"/>
  </bean>

  <bean class="org.akraievoy.cnet.opt.api.GeneticState" id="geneticState">
    <!-- those are mostly hard-wired sanity checks -->
    <property name="fitnessDeviationMax" value="0.98"/>
    <property name="fitnessDeviationMin" value="0.02"/>
    <property name="minElemFitnessNorm" value="0.005"/>

    <!-- might be made dynamic and profiled -->
    <property name="maxCrossover" value="0.1"/>
    <property name="maxElemFitPow" value="8"/>
    <property name="maxMutation" value="0.05"/>
  </bean>

  <bean class="org.akraievoy.cnet.soo.domain.GeneticStrategySoo" id="geneticStrategy">
    <constructor-arg>
      <bean class="org.akraievoy.cnet.metrics.domain.MetricRoutesFloydWarshall"/>
    </constructor-arg>

    <!-- DYNAMIC -->
    <property name="lambda" value="0.55"/>
    <!-- DYNAMIC -->
    <property name="startLambda" value="0.55"/>
    <!-- DYNAMIC -->
    <property name="lambdaTargetGeneration" value="0"/>
    <!-- DYNAMIC -->
    <property name="theta" value="1.75"/>
    <!-- DYNAMIC -->
    <property name="steps" value="1"/>

    <property name="distSource" ref="ref_overlay_edata_distance"/>
    <property name="requestSource" ref="ref_overlay_edata_requests"/>
  </bean>

  <bean class="org.akraievoy.cnet.opt.domain.ExperimentGeneticOpt" id="ovlGenOpt">
    <constructor-arg ref="entropySourceGenetics"/>
    <constructor-arg ref="geneticStrategy"/>

    <property name="state" ref="geneticState"/>

    <property name="seedSource">
      <bean class="org.akraievoy.cnet.soo.domain.SeedSourceHeuristic">
      </bean>
    </property>

    <property name="breeders">
      <list>
        <bean class="org.akraievoy.cnet.soo.domain.BreederSooExpand"/>
        <bean class="org.akraievoy.cnet.soo.domain.BreederSooLocalize"/>
      </list>
    </property>

    <property name="mutators">
      <list>
        <bean class="org.akraievoy.cnet.soo.domain.MutatorSooRewireExpand"/>
        <bean class="org.akraievoy.cnet.soo.domain.MutatorSooRewireLocalize"/>
      </list>
    </property>

    <property name="conditions">
      <list>
        <bean class="org.akraievoy.cnet.soo.domain.ConditionSooSpectre"/>
        <bean class="org.akraievoy.cnet.soo.domain.ConditionSooDensity"/>
        <bean class="org.akraievoy.cnet.opt.api.ConditionUnique"/>
      </list>
    </property>

    <property name="genKey" value="specimen"/>

    <property name="eliteRatio" value="0.1"/>

    <property name="crossoverRatio" value="0.15"/>
    <property name="mutationRatio" value="0.15"/>

    <property name="missLimitRatio" value="25"/>

    <property name="generationParamName" value="ovlGenOpt.generation"/>
    <property name="specimenIndexParamName" value="ovlGenOpt.specimenIndex"/>
  </bean>

  <bean class="org.akraievoy.base.runner.api.ExperimentTiming" id="main">
    <constructor-arg ref="ovlGenOpt"/>

    <property name="durationTextRef" ref="main_duration_text"/>
    <property name="durationRef" ref="main_duration_millis"/>
  </bean>
</beans>