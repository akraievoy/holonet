/*
 Copyright 2011 Anton Kraievoy akraievoy@gmail.com
 This file is part of Holonet.

 Holonet is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 Holonet is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with Holonet. If not, see <http://www.gnu.org/licenses/>.
 */

package org.akraievoy.base.runner.swing;

import javax.swing.*;
import java.awt.*;

public class ExperimentChooserPanel {
  protected JButton closeButton;
  protected JButton launchButton;
  protected JTable experimentTable;
  protected JPanel rootPanel;
  protected JTextPane outputPane;
  protected JComboBox confCombo;
  protected JTable runsTable;
  protected JButton selectButton;
  protected JButton importButton;
  protected JTextField chainTextField;
  protected JButton chainButton;
  protected JLabel expNameLabel;

  public JPanel getRootPanel() {
    return rootPanel;
  }

  public JButton getCloseButton() {
    return closeButton;
  }

  public JTable getExperimentTable() {
    return experimentTable;
  }

  public JButton getLaunchButton() {
    return launchButton;
  }

  public JTextPane getOutputPane() {
    return outputPane;
  }

  public JComboBox getConfCombo() {
    return confCombo;
  }

  public JButton getChainButton() {
    return chainButton;
  }

  public JTextField getChainTextField() {
    return chainTextField;
  }

  public JButton getImportButton() {
    return importButton;
  }

  public JTable getRunsTable() {
    return runsTable;
  }

  public JButton getSelectButton() {
    return selectButton;
  }

  public JLabel getExpNameLabel() {
    return expNameLabel;
  }

  {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
    $$$setupUI$$$();
  }

  /**
   * Method generated by IntelliJ IDEA GUI Designer
   * >>> IMPORTANT!! <<<
   * DO NOT edit this method OR call it in your code!
   *
   * @noinspection ALL
   */
  private void $$$setupUI$$$() {
    rootPanel = new JPanel();
    rootPanel.setLayout(new BorderLayout(0, 0));
    final JPanel panel1 = new JPanel();
    panel1.setLayout(new BorderLayout(0, 0));
    rootPanel.add(panel1, BorderLayout.SOUTH);
    final JPanel panel2 = new JPanel();
    panel2.setLayout(new FlowLayout(FlowLayout.CENTER, 6, 5));
    panel1.add(panel2, BorderLayout.EAST);
    closeButton = new JButton();
    closeButton.setActionCommand("close");
    closeButton.setLabel("Close");
    closeButton.setText("Close");
    closeButton.setToolTipText("Close the runner");
    panel2.add(closeButton);
    final JLabel label1 = new JLabel();
    label1.setAlignmentX(0.25f);
    label1.setEnabled(false);
    label1.setFocusable(false);
    label1.setFont(new Font(label1.getFont().getName(), Font.ITALIC, label1.getFont().getSize()));
    label1.setForeground(new Color(-16777216));
    label1.setHorizontalAlignment(0);
    label1.setOpaque(false);
    label1.setText("(c) Anton Kraievoy, 2009");
    label1.setVerifyInputWhenFocusTarget(true);
    panel1.add(label1, BorderLayout.CENTER);
    final JPanel panel3 = new JPanel();
    panel3.setLayout(new GridBagLayout());
    panel1.add(panel3, BorderLayout.NORTH);
    final JSplitPane splitPane1 = new JSplitPane();
    splitPane1.setDividerLocation(320);
    splitPane1.setDividerSize(5);
    splitPane1.setInheritsPopupMenu(false);
    splitPane1.setLastDividerLocation(195);
    splitPane1.setOneTouchExpandable(true);
    splitPane1.setResizeWeight(0.75);
    rootPanel.add(splitPane1, BorderLayout.CENTER);
    final JScrollPane scrollPane1 = new JScrollPane();
    scrollPane1.setBackground(new Color(-3355444));
    splitPane1.setLeftComponent(scrollPane1);
    outputPane = new JTextPane();
    outputPane.setBackground(new Color(-16777216));
    outputPane.setFont(new Font("Lucida Sans Typewriter", outputPane.getFont().getStyle(), 12));
    outputPane.setMinimumSize(new Dimension(320, 21));
    outputPane.setPreferredSize(new Dimension(320, 21));
    outputPane.setToolTipText("Experiment output");
    scrollPane1.setViewportView(outputPane);
    final JPanel panel4 = new JPanel();
    panel4.setLayout(new GridBagLayout());
    splitPane1.setRightComponent(panel4);
    final JScrollPane scrollPane2 = new JScrollPane();
    GridBagConstraints gbc;
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 0;
    gbc.weightx = 1.0;
    gbc.weighty = 1.0;
    gbc.fill = GridBagConstraints.BOTH;
    panel4.add(scrollPane2, gbc);
    experimentTable = new JTable();
    experimentTable.setPreferredScrollableViewportSize(new Dimension(240, 180));
    scrollPane2.setViewportView(experimentTable);
    final JPanel panel5 = new JPanel();
    panel5.setLayout(new FlowLayout(FlowLayout.RIGHT, 12, 4));
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 1;
    gbc.anchor = GridBagConstraints.SOUTHEAST;
    panel4.add(panel5, gbc);
    importButton = new JButton();
    importButton.setText("Import");
    panel5.add(importButton);
    selectButton = new JButton();
    selectButton.setText("Select");
    panel5.add(selectButton);
    final JScrollPane scrollPane3 = new JScrollPane();
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 2;
    gbc.weightx = 1.0;
    gbc.weighty = 1.0;
    gbc.fill = GridBagConstraints.BOTH;
    panel4.add(scrollPane3, gbc);
    runsTable = new JTable();
    runsTable.setPreferredScrollableViewportSize(new Dimension(240, 180));
    scrollPane3.setViewportView(runsTable);
    final JPanel panel6 = new JPanel();
    panel6.setLayout(new GridBagLayout());
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 3;
    gbc.anchor = GridBagConstraints.EAST;
    panel4.add(panel6, gbc);
    final JLabel label2 = new JLabel();
    label2.setText("Cache Chaning:");
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 1;
    gbc.anchor = GridBagConstraints.EAST;
    gbc.insets = new Insets(2, 2, 2, 2);
    panel6.add(label2, gbc);
    chainTextField = new JTextField();
    chainTextField.setColumns(12);
    chainTextField.setMinimumSize(new Dimension(96, 21));
    gbc = new GridBagConstraints();
    gbc.gridx = 1;
    gbc.gridy = 1;
    gbc.weightx = 1.0;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    gbc.insets = new Insets(2, 2, 2, 2);
    panel6.add(chainTextField, gbc);
    chainButton = new JButton();
    chainButton.setText("Chain");
    chainButton.setToolTipText("Chain on selected run data");
    gbc = new GridBagConstraints();
    gbc.gridx = 2;
    gbc.gridy = 1;
    gbc.gridwidth = 3;
    gbc.weightx = 0.5;
    gbc.anchor = GridBagConstraints.WEST;
    gbc.insets = new Insets(2, 2, 2, 2);
    panel6.add(chainButton, gbc);
    final JLabel label3 = new JLabel();
    label3.setText("Config:");
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 2;
    gbc.anchor = GridBagConstraints.EAST;
    gbc.insets = new Insets(2, 4, 2, 2);
    panel6.add(label3, gbc);
    confCombo = new JComboBox();
    gbc = new GridBagConstraints();
    gbc.gridx = 1;
    gbc.gridy = 2;
    gbc.gridwidth = 4;
    gbc.weightx = 2.0;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    gbc.insets = new Insets(2, 2, 2, 2);
    panel6.add(confCombo, gbc);
    launchButton = new JButton();
    launchButton.setActionCommand("launch");
    launchButton.setEnabled(false);
    launchButton.setFont(new Font(launchButton.getFont().getName(), Font.BOLD, launchButton.getFont().getSize()));
    launchButton.setLabel("Launch");
    launchButton.setText("Launch");
    launchButton.setToolTipText("Launch the selected configuration");
    gbc = new GridBagConstraints();
    gbc.gridx = 4;
    gbc.gridy = 3;
    gbc.weightx = 0.5;
    gbc.insets = new Insets(2, 2, 4, 4);
    panel6.add(launchButton, gbc);
    final JLabel label4 = new JLabel();
    label4.setText("Experiment:");
    gbc = new GridBagConstraints();
    gbc.gridx = 0;
    gbc.gridy = 0;
    gbc.anchor = GridBagConstraints.EAST;
    gbc.insets = new Insets(4, 4, 2, 2);
    panel6.add(label4, gbc);
    expNameLabel = new JLabel();
    expNameLabel.setHorizontalAlignment(2);
    expNameLabel.setHorizontalTextPosition(2);
    expNameLabel.setRequestFocusEnabled(true);
    expNameLabel.setText(" ");
    gbc = new GridBagConstraints();
    gbc.gridx = 1;
    gbc.gridy = 0;
    gbc.gridwidth = 4;
    gbc.weightx = 2.0;
    gbc.fill = GridBagConstraints.HORIZONTAL;
    gbc.insets = new Insets(4, 2, 2, 2);
    panel6.add(expNameLabel, gbc);
  }

  /**
   * @noinspection ALL
   */
  public JComponent $$$getRootComponent$$$() { return rootPanel; }
}
