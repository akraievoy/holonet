<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.akraievoy</groupId>
  <artifactId>holonet-root</artifactId>
  <name>holonet :: root</name>
  <version>1.3</version>
  <packaging>jar</packaging>

  <repositories>
    <repository>
      <id>github-akraievoy-mvn_repo</id>
      <name>github-akraievoy-mvn_repo</name>
      <url>https://github.com/akraievoy/mvn_repo/raw/master/releases/</url>
    </repository>
  </repositories>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.10</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-core-asl</artifactId>
      <version>1.4.3</version>
    </dependency>
    <dependency>
      <groupId>org.akraievoy</groupId>
      <artifactId>couch</artifactId>
      <version>1.3.11</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl104-over-slf4j</artifactId>
      <version>1.4.3</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.4.3</version>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.13</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>11.0.2</version>
    </dependency>
    <dependency>
      <groupId>commons-dbutils</groupId>
      <artifactId>commons-dbutils</artifactId>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>1.1.117</version>
    </dependency>
    <dependency>
      <groupId>org.akraievoy</groupId>
      <artifactId>base-runner-spring</artifactId>
      <version>1.3.3</version>
    </dependency>
    <dependency>
      <groupId>org.akraievoy</groupId>
      <artifactId>base</artifactId>
      <version>1.3.1</version>
      <exclusions>
        <exclusion>
          <groupId>org.codehaus.jackson</groupId>
          <artifactId>jackson-core-asl</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.codehaus.jackson</groupId>
          <artifactId>jackson-mapper-asl</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!--
        <dependency>
          <groupId>org.prefuse</groupId>
          <artifactId>prefuse</artifactId>
          <version>beta-20071021</version>
        </dependency>
    -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>2.5.6</version>
      <exclusions>
        <exclusion>
          <groupId>aopalliance</groupId>
          <artifactId>aopalliance</artifactId>
        </exclusion>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>net.sf.trove4j</groupId>
      <artifactId>trove4j</artifactId>
      <version>2.0.2</version>
    </dependency>
    <dependency>
      <groupId>org.netlib</groupId>
      <artifactId>netlib-java</artifactId>
      <version>0.9.1</version>
    </dependency>
    <dependency>
      <groupId>org.netlib</groupId>
      <artifactId>arpack-combo</artifactId>
      <version>0.1</version>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>${project.build.directory}/generated-resources</directory>
      </resource>
    </resources>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <configuration>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>
      <!-- Create build number and write it to a file -->
      <plugin>
        <groupId>org.codehaus.groovy.maven</groupId>
        <artifactId>gmaven-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-resources</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <source>
                //  String buildNumber= System.getenv()['BUILD_NUMBER']; // is set by TeamCity
                String buildNumber = null;
                if (buildNumber == null) {
                  boolean fallback = true;
                  if (new File(".svn").isDirectory()) {
                    // If not set, get from SVN
                    try {
                      Process process = Runtime.runtime.exec("svnversion -n -c " + project.basedir + "/..");
                      buildNumber = process.inputStream.text
                          .replaceFirst("^[0-9]*:", "")
                          .replaceFirst("(P)+\$", "")
                          .replaceFirst("(M|S)+\$", ".01");
                      process.waitFor();
                      fallback = false;
                    } catch (IOException ex) {
                      println "svnversion integration failed: " + ex.getMessage()
                    }
                  } else if (new File(".git").isDirectory() || new File("..", ".git").isDirectory()) {
                    // If not set, get from Git
                    try {
                      Process process = Runtime.runtime.exec("git rev-list --graph --oneline akraievoy_build_root..HEAD");

                      //  475 is an upped number of revisions in my previous SVN repo (just to keep numbering fine)
                      buildNumber = process.inputStream.text.split("\r?\n").length + 475;

                      process.waitFor();
                      fallback = false;
                    } catch (IOException ex) {
                      println "git integration failed: " + ex.getMessage()
                    }
                  }

                  // if the commands are not present or fail, set from time
                  if (fallback) {
                    buildNumber = new Date().format("yyMMdd.hhmm")
                  }
                }

                println 'Building version [' + project.properties['milestone'] + '.' + buildNumber + ']'

                // Write to properties, to be picked by Build.class
                File propFile = new File(project.build.directory + "/generated-resources/org/akraievoy/build.properties");
                propFile.parentFile.mkdirs();
                propFile.write(
                    "org.akraievoy.build=" + project.properties['milestone'] + '.' + buildNumber + "\n" +
                        "org.akraievoy.timestamp=" + new Date().format("yyMMddHHmmssSSSZ")
                );
              </source>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <properties>
    <milestone>1.3</milestone>
  </properties>
</project>
